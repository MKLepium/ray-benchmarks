cluster_name: max-test-cluster18
# Max number of workers (+ head)
max_workers: 5

# How fast the autoscaler increases the number of workers.
# Not 100% sure how this acts in practice
upscaling_speed: 1.0

docker:
    # The image must have Ray installed. If you're using your own custom
    #image: "rayproject/ray-ml:latest-gpu"
    container_name: "ray_container"
    # Pull the latest image before running the container.
    pull_before_run: False
    run_options:   # Extra options to pass into "docker run"
        - --ulimit nofile=65536:65536

    # Example of running a GPU head with CPU workers
    head_image: "rayproject/ray-ml:latest-cpu"
    # Allow Ray to automatically detect GPUs

    worker_image: "rayproject/ray-ml:latest-gpu"
    # worker_run_options: []

# Idle timeout means nodes will be removed.
idle_timeout_minutes: 3

# Cloud-provider specific configuration.
provider:
    type: azure
    # https://azure.microsoft.com/en-us/global-infrastructure/locations
    location: germanywestcentral
    resource_group: ray-cluster18
    # (original documentation:) set subscription id otherwise the default from az cli will be used
    # SIKE, it won't, see issue:
    # https://github.com/ray-project/ray/issues/44254
    subscription_id: 9eb5ca4d-5192-4e37-b7e3-a4397a9d67de
    # set unique subnet mask or a random mask will be used
    # subnet_mask: 10.0.0.0/16
    # set unique id for resources in this cluster
    # if not set a default id will be generated based on the resource group and cluster name
    # unique_id: RAY1


    # Just so I cantest without cached nodes.
    cache_stopped_nodes: True

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu
    # you must specify paths to matching private and public key pair files
    # use `ssh-keygen -t rsa -b 4096` to generate a new ssh key pair
    # NO SUPPORT FOR ed25519 KEYS
    ssh_private_key: ~/.ssh/id_rsa-azure
    # changes to this should match what is specified in file_mounts
    ssh_public_key: ~/.ssh/id_rsa-azure.pub

# More specific customization to node configurations can be made using the ARM template azure-vm-template.json file
# See documentation here: https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/2019-03-01/virtualmachines
# Changes to the local file will be used during deployment of the head node, however worker nodes deployment occurs
# on the head node, so changes to the template must be included in the wheel file used in setup_commands section below

# Tell the autoscaler the allowed node types and the resources they provide.
# The key is the name of the node type, which is just for debugging purposes.
# The node config specifies the launch config and physical instance type.
available_node_types:
    ray.head.default:
        # The resources provided by this node type.
        resources: {"CPU": 0, "GPU": 0}
        # To avoid scheduling extra tasks on the head node we can set this to 0 and 0 (adviced for LARGE clusters)
        # In this case, the head node will only be used for the ray head and the dashboard
        # Otherwise, the head node will be used for running tasks as well
        
        # Provider-specific config, e.g. instance type.
        node_config:
            azure_arm_parameters:
            # NO GPU for head node
                vmSize: Standard_D2s_v3

                # List images https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cli-ps-findimage
                imagePublisher: microsoft-dsvm
                imageOffer: ubuntu-1804
                imageSku: 1804-gen2
                imageVersion: latest

    ray.worker.default:
        # The minimum number of worker nodes of this type to launch.
        # This number should be >= 0.
        min_workers: 1
        # The maximum number of worker nodes of this type to launch.
        # This takes precedence over min_workers.
        max_workers: 1
        # The resources provided by this node type.
        resources: {"CPU": 2, "GPU": 1}
        # Provider-specific config, e.g. instance type.
        node_config:
            azure_arm_parameters:
                vmSize: Standard_NC4as_T4_v3
                # Standard_NC4as_T4_v3 # 4 vCPUs, *4 = 16 total request for azure. NCasT4v3 
                # Standard_NV6ads_A10_v5 # 6 vCPUs, *4 = 24 total request for azure.

                # This has to be specifically requested (at least for sweden central)
                # List images https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cli-ps-findimage
                imagePublisher: microsoft-dsvm
                imageOffer: ubuntu-1804
                imageSku: 1804-gen2
                imageVersion: latest
                # optionally set priority to use Spot instances
                #priority: Spot
                # set a maximum price for spot instances if desired
                #billingProfile:
                #    maxPrice: -1

# Specify the node type of the head node (as configured above).
head_node_type: ray.head.default

# Files or directories to copy to the head and worker nodes. The format is a
# dictionary from REMOTE_PATH: LOCAL_PATH, e.g.
file_mounts: {
#    "/path1/on/remote/machine": "/path1/on/local/machine",
#    "/path2/on/remote/machine": "/path2/on/local/machine",
     "~/.ssh/id_rsa-azure.pub": "~/.ssh/id_rsa-azure.pub",
     #"~/.env": "./Secrets/.env",
     "~/1_rep_serve_api_call.py": "./1_rep_serve_api_call.py",
}
# ray rsync_up Azure.yaml "~/1_rep_serve_api_call.py" "./1_rep_serve_api_call.py"

# Files or directories to copy from the head node to the worker nodes. The format is a
# list of paths. The same path on the head node will be copied to the worker node.
# This behavior is a subset of the file_mounts behavior. In the vast majority of cases
# you should just use file_mounts. Only use this if you know what you're doing!
cluster_synced_files: []

# Whether changes to directories in file_mounts or cluster_synced_files in the head node
# should sync to the worker node continuously
file_mounts_sync_continuously: False

# Patterns for files to exclude when running rsync up or rsync down
rsync_exclude:
    - "**/.git"
    - "**/.git/**"

# Pattern files to use for filtering out files when running rsync up or rsync down. The file is searched for
# in the source directory and recursively through all subdirectories. For example, if .gitignore is provided
# as a value, the behavior will match git's behavior for finding and using .gitignore files.
rsync_filter:
    - ".gitignore"

# List of commands that will be run before `setup_commands`. If docker is
# enabled, these commands will run outside the container and before docker
# is setup.
initialization_commands:
    # enable docker setup
    - sudo usermod -aG docker $USER || true
    - sleep 10  # delay to avoid docker permission denied errors
    # ORIGINAL RAY DOCUMENTATION: "get rid of annoying Ubuntu message"
    - touch ~/.sudo_as_admin_successful

# List of shell commands to run to set up nodes.
# NOTE: rayproject/ray-ml:latest has ray latest bundled
setup_commands: []
    # Note: if you're developing Ray, you probably want to create a Docker image that
    # has your Ray repo pre-cloned. Then, you can replace the pip installs
    # below with a git checkout <your_sha> (and possibly a recompile).
    # To run the nightly version of ray (as opposed to the latest), either use a rayproject docker image
    # that has the "nightly" (e.g. "rayproject/ray-ml:nightly-gpu") or uncomment the following line:
    # - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp38-cp38-manylinux2014_x86_64.whl"

# Custom commands that will be run on the head node after common setup.
# NOTE: rayproject/ray-ml:latest has azure packages bundled
head_setup_commands: 
    - pip install -U azure-cli-core==2.29.1 azure-identity==1.7.0 azure-mgmt-compute==23.1.0 azure-mgmt-network==19.0.0 azure-mgmt-resource==20.0.0 msrestazure==0.6.4 "huggingface_hub[cli]"

# Custom commands that will be run on worker nodes after common setup.
worker_setup_commands: 
    - pip install -U azure-cli-core==2.29.1 azure-identity==1.7.0 azure-mgmt-compute==23.1.0 azure-mgmt-network==19.0.0 azure-mgmt-resource==20.0.0 msrestazure==0.6.4 "huggingface_hub[cli]"

# Command to start ray on the head node.
head_start_ray_commands:
    - ray stop
    - ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml
#    - source ~/.env
#    - huggingface-cli login
    

# Command to start ray on worker nodes.
worker_start_ray_commands:
    - ray stop
    - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
#    - source ~/.env
#    - huggingface-cli login 
